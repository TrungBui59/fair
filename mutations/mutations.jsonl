{"description": "Add +1ms to deltaT causing extra decay per visit", "bug_class": "ttl_fence", "mutation_file": "m41-deltaT-plus1-ttl-fence.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "RegisterRequest() after idle", "original_outcome": "decay uses exact elapsed", "mutated_outcome": "+1ms extra decay each visit"}, "fingerprint": "b19f3e72d135b45a7476e513801744b59e75fec21636539cdbcd8632862f3a15", "tested_on": "2025-09-01T21:13:15.946350", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "On success decrement by Pi instead of Pd (much larger)", "bug_class": "error_semantics", "mutation_file": "m42-success-uses-Pi.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "ReportOutcome(OutcomeSuccess)", "original_outcome": "probability reduced by Pd", "mutated_outcome": "probability reduced by Pi"}, "fingerprint": "2d56d0bd7fb596a182985fc37fe484108796d31932efa6230fbe44c87bbedece", "tested_on": "2025-09-01T21:13:16.145881", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Use Unix seconds instead of milliseconds for currentMillis()", "bug_class": "time_source", "mutation_file": "m43-currentMillis-seconds.diff", "file": "pkg/data/data.go", "lines_changed": 4, "witness": {"call": "adjustProbability with small delta", "original_outcome": "ms precision decay", "mutated_outcome": "seconds precision decay (coarser)"}, "fingerprint": "0bde95894c6c876f8ccc17b730e3d7eeaeeb27712d27e0ff3851a2f5990c9bff", "tested_on": "2025-09-01T21:13:16.343770", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Clamp allows p==1 to be reduced to 1 (stays stuck)", "bug_class": "off_by_one", "mutation_file": "m44-upper-clamp-obo.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "ReportOutcome with p near 1", "original_outcome": "clamped when >1", "mutated_outcome": "clamped when >=1 (extra sticking)"}, "fingerprint": "9c66faf7b3fa6fd8090710989dac6e5f7968a2b55871eaaa42582ef62d20dee4", "tested_on": "2025-09-01T21:13:16.526339", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Use mean instead of min for final probability", "bug_class": "error_semantics", "mutation_file": "m45-min-to-mean-finalprob.diff", "file": "pkg/config/tuning.go", "lines_changed": 4, "witness": {"call": "RegisterRequest with mixed buckets", "original_outcome": "min dominates", "mutated_outcome": "mean dilutes spikes"}, "fingerprint": "871e18125a44bbc6988422a4407b71c5cce6ff67c8bd02efc0efa24b573046ea", "tested_on": "2025-09-01T21:13:16.686544", "caught_by_test": true, "test_output": "FAIL\tgithub.com/satmihir/fair/pkg/config [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/data [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/integration [build failed]\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nFAIL\tgithub.com/satmihir/fair/pkg/tracker [build failed]\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\nFAIL\n# github.com/satmihir/fair/pkg/config\npkg/config/tuning.go:48:2: MeanFinalProbabilityFunction redecl"}
{"description": "Builder silently ignores IncludeStats setter", "bug_class": "validation", "mutation_file": "m46-ignore-includeStats.diff", "file": "pkg/tracker/types.go", "lines_changed": 2, "witness": {"call": "SetIncludeStats(true).Build()", "original_outcome": "stats enabled", "mutated_outcome": "stats disabled"}, "fingerprint": "ea43a8b821eccff75f2521b92214f7e7708eb5eaf9d361b4145fe348646190c6", "tested_on": "2025-09-01T21:13:17.360008", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Rotation goroutine prioritizes ticks over stop signal", "bug_class": "ctx_cancel", "mutation_file": "m47-select-priority-rotation.diff", "file": "pkg/tracker/tracker.go", "lines_changed": 2, "witness": {"call": "Close() during heavy ticking", "original_outcome": "stops promptly", "mutated_outcome": "may skew to continue rotation first"}, "fingerprint": "0d028a30d5bdde16294446a323ac4d4f2e94914e039272e8af5c36a593671349", "tested_on": "2025-09-01T21:13:17.545028", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Validation allows Pi==Pd (recovery too fast)", "bug_class": "validation", "mutation_file": "m48-allow-Pd-eq-Pi.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "validateStructureConfig with Pi==Pd", "original_outcome": "error", "mutated_outcome": "passes"}, "fingerprint": "d554a4cb75824dc0abd53db8e34d64900b99f26be4e547892e4fbf1086765858", "tested_on": "2025-09-01T21:13:17.727213", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Hash loop boundary subtly altered (same count but fragile)", "bug_class": "off_by_one", "mutation_file": "m49-hash-loop-obo.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "generateNHashesUsing64Bit(n)", "original_outcome": "i < n", "mutated_outcome": "i <= n-1"}, "fingerprint": "b6a4d3507f728b8d945139a7365cbb094507974cd06d04541eb496226f65a680", "tested_on": "2025-09-01T21:13:17.909964", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Mean function divides by len-1 when len>1 (inflates mean)", "bug_class": "other", "mutation_file": "m50-mean-divide-lenminus1.diff", "file": "pkg/config/tuning.go", "lines_changed": 1, "witness": {"call": "MeanFinalProbabilityFunction([a,b])", "original_outcome": "(a+b)/2", "mutated_outcome": "(a+b)/1"}, "fingerprint": "92387c9afb7449f4ea9e8788445ad2805a8065a6ebbea6e4a94a0dfe70ddef2e", "tested_on": "2025-09-01T21:13:18.109943", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Use integer seconds in decay (precision loss)", "bug_class": "other", "mutation_file": "m51-decay-integer-seconds.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "adjustProbability over <1s", "original_outcome": "smooth decay", "mutated_outcome": "stepwise decay"}, "fingerprint": "02fa668f30dfad659d04edeba6e0028d1cd6daa9713c5e165007ec29568563e7", "tested_on": "2025-09-01T21:13:18.953286", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestAdjustProbability (0.00s)\n    data_test.go:164: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/data/data_test.go:164\n        \tError:      \tNot equal: \n        \t            \texpected: 0.9\n        \t            \tactual  : 0.89991000449985\n        \tTest:       \tTestAdjustProbability\nFAIL\nFAIL\tgithub.c"}
{"description": "Combine hash parts with XOR instead of addition", "bug_class": "other", "mutation_file": "m52-hash-xor-combine.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "generateNHashesUsing64Bit", "original_outcome": "linear probe pattern", "mutated_outcome": "xor pattern"}, "fingerprint": "39bc83e5dedbdfbd8f293d9e84d55982e857cde8dd57b926153acc6ed3f2e682", "tested_on": "2025-09-01T21:13:19.132839", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Validation allows Pi or Pd == 0", "bug_class": "validation", "mutation_file": "m53-allow-zero-pi-pd.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "validateStructureConfig with Pd=0", "original_outcome": "error", "mutated_outcome": "passes"}, "fingerprint": "d884bb6516709248acd1d47c0d38ea0abddf5c88d3e373d1336eb572fb494004", "tested_on": "2025-09-01T21:13:19.307374", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Underestimate expected bad flows: use floor for M", "bug_class": "validation", "mutation_file": "m54-underestimate-M-floor.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "GenerateTunedStructureConfig(expected=1000)", "original_outcome": "M=ceil(expected*percent)", "mutated_outcome": "M=floor(expected*percent)"}, "fingerprint": "7df6a26ae9fc31887cc6c68c98dba9f57b9be2db6d5ee3c83c25de0b119055be", "tested_on": "2025-09-01T21:13:22.902378", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\n--- FAIL: TestBuildWithConfig (0.00s)\n    types_test.go:43: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/tracker/types_test.go:43\n        \tError:      \tNot equal: \n        \t            \texpected: 3\n        \t"}
{"description": "Builder clamps L below 3 to 3 silently", "bug_class": "error_semantics", "mutation_file": "m55-builder-clamp-L.diff", "file": "pkg/tracker/types.go", "lines_changed": 2, "witness": {"call": "SetL(1).Build()", "original_outcome": "L=1 honored", "mutated_outcome": "L=3 silently"}, "fingerprint": "96c880363abe1f887b2eb64bc6dd77f7bc5857aa0bd7b9d783a57bf65dd657d7", "tested_on": "2025-09-01T21:13:23.200014", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Rotation skips one ID each time (+=2)", "bug_class": "other", "mutation_file": "m56-rotation-id-skip.diff", "file": "pkg/tracker/tracker.go", "lines_changed": 2, "witness": {"call": "multiple rotations", "original_outcome": "3,4,5...", "mutated_outcome": "3,5,7..."}, "fingerprint": "b88e253942f3bcedfcbfb68b9387e39371ad2a460408a574b18d056069ae0bc8", "tested_on": "2025-09-01T21:13:23.385010", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "CalculateL uses floor instead of ceil (fewer levels)", "bug_class": "off_by_one", "mutation_file": "m57-calcL-floor.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "CalculateL(B,M,p)", "original_outcome": "ceil", "mutated_outcome": "floor"}, "fingerprint": "5984d700e762aaff72e756f55f9a4ff7911f2d1e6f64efb22c5b16bf8adb5f0e", "tested_on": "2025-09-01T21:13:27.191738", "caught_by_test": true, "test_output": "?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestCalculateL (0.00s)\n    tuning_test.go:12: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/config/tuning_test.go:12\n        \tError:      \tNot equal: \n        \t            \texpected: 3\n        \t            \tactual  : 4\n        \tTest:       \tTestCalculateL\nFAIL\nFAIL\tgithub.com/satmihir/fair/pkg/config\t0.252s\nok  \tgithub.com/satmihir/fair/pkg/data\t(ca"}
{"description": "NewRealTicker creates ticker then immediately stops it", "bug_class": "other", "mutation_file": "m58-stopped-ticker.diff", "file": "pkg/utils/time_utils.go", "lines_changed": 2, "witness": {"call": "NewRealTicker().C()", "original_outcome": "ticks arrive", "mutated_outcome": "no ticks"}, "fingerprint": "ab0f7cd6eb60c142ec20bb8e3454dd97d3aa7d377413b537b33d2b38294fc01c", "tested_on": "2025-09-01T21:13:27.355824", "caught_by_test": true, "test_output": "FAIL\tgithub.com/satmihir/fair/pkg/data [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/integration [build failed]\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nFAIL\tgithub.com/satmihir/fair/pkg/tracker [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/utils [build failed]\nok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nFAIL\n# github.com/satmihir/fair/pkg/utils\npkg/utils/time_utils.go:43:11: func() {\u2026}() (no value) used as "}
{"description": "Stats report bucket index shifted by +1 (wrapped)", "bug_class": "off_by_one", "mutation_file": "m59-stats-index-obo.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "includeStats RegisterRequest", "original_outcome": "true index", "mutated_outcome": "+1 mod M"}, "fingerprint": "acf00de0d75ffcd7313e721c7355296dc3f05b129ef0393d6223d70076dddb16", "tested_on": "2025-09-01T21:13:27.577308", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Do not refresh lastUpdatedTimeMillis after outcome update", "bug_class": "ttl_fence", "mutation_file": "m60-no-update-last-time.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "ReportOutcome then RegisterRequest soon after", "original_outcome": "low decay due to small delta", "mutated_outcome": "high decay since delta accumulates"}, "fingerprint": "53d15a2e2b86b69ee56a35ae46fc35c79eaa14a13ec7ffabc686bfef86fab75b", "tested_on": "2025-09-01T21:13:27.776146", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Increase exponential decay by 10% (lambda*1.1)", "bug_class": "ttl_fence", "mutation_file": "m61-decay-boost-10pct.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "adjustProbability over time", "original_outcome": "baseline decay", "mutated_outcome": "faster decay"}, "fingerprint": "c53e13f9f7cf42eb4718af2abe6f9a8c887153216087ae6810b72e8edf408d1f", "tested_on": "2025-09-01T21:13:28.347943", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestAdjustProbability (0.00s)\n    data_test.go:164: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/data/data_test.go:164\n        \tError:      \tNot equal: \n        \t            \texpected: 0.8999010054448003\n        \t            \tactual  : 0.89991000449985\n        \tTest:       \tTestAdjustProbability\nFAI"}
{"description": "Initialize lastUpdatedTimeMillis using seconds (coarser)", "bug_class": "time_source", "mutation_file": "m62-newBucket-seconds.diff", "file": "pkg/data/data.go", "lines_changed": 4, "witness": {"call": "newBucket+visitBuckets", "original_outcome": "ms precision", "mutated_outcome": "s precision"}, "fingerprint": "0bde95894c6c876f8ccc17b730e3d7eeaeeb27712d27e0ff3851a2f5990c9bff", "tested_on": "2025-09-01T21:13:28.617187", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Skip level 0 in visitBuckets loop", "bug_class": "off_by_one", "mutation_file": "m63-skip-first-level.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "RegisterRequest with L>=2", "original_outcome": "all levels used", "mutated_outcome": "level 0 ignored"}, "fingerprint": "a6e2952306e0cc3e4282f8709daad2f95eb06ebf0a89f92c64c9809c8be3c885", "tested_on": "2025-09-01T21:13:32.459779", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestIntegration (2.61s)\n    integration_test.go:102: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/integration/integration_test.go:102\n        \tError:      \t\"0\" is not greater than \"0\"\n        \tTest:       \tTestIntegration\nFAIL\nFAIL\tgithub.com/satmihir/"}
{"description": "On success increase probability by Pd (penalize)", "bug_class": "error_semantics", "mutation_file": "m64-penalize-success.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "ReportOutcome(OutcomeSuccess)", "original_outcome": "probability decreases", "mutated_outcome": "probability increases"}, "fingerprint": "b8aa2ba18029de064d4e92aa37b1866553fee605610673faf119961da4993cca", "tested_on": "2025-09-01T21:13:36.065157", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\n--- FAIL: TestEndToEnd (0.04s)\n    tracker_test.go:43: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/tracker/tracker_test.go:43\n        \tError:      \tShould be false\n        \tTest:       \tTestEndToEnd\nFAIL\nFA"}
{"description": "Skip warming secondary structure during RegisterRequest", "bug_class": "other", "mutation_file": "m65-no-secondary-warmup.diff", "file": "pkg/tracker/tracker.go", "lines_changed": 2, "witness": {"call": "RegisterRequest", "original_outcome": "both structures touched", "mutated_outcome": "only main updated"}, "fingerprint": "e056b6c0b60eb91188b2bc1a758bddf87031ec3756d7419cd0e0240e18b160e5", "tested_on": "2025-09-01T21:13:36.243934", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nFAIL\tgithub.com/satmihir/fair/pkg/integration [build failed]\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nFAIL\tgithub.com/satmihir/fair/pkg/tracker [build failed]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\nFAIL\n# github.com/satmihir/fair/pkg/tracker\npkg/tracker/tracker.go:101:2: syntax error: unexpected /, expected }\n# gi"}
{"description": "Rotation assigns new structure to main before secondary", "bug_class": "other", "mutation_file": "m66-rotate-swap-order.diff", "file": "pkg/tracker/tracker.go", "lines_changed": 4, "witness": {"call": "during rotation tick", "original_outcome": "main <- secondary, secondary <- new", "mutated_outcome": "secondary <- main, main <- new"}, "fingerprint": "a59cdb51115d373e6b631bfbc319cbb080c0bcea6863348332314260e40e2f97", "tested_on": "2025-09-01T21:13:39.852827", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\n--- FAIL: TestRotation (3.00s)\n    tracker_test.go:53: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/tracker/tracker_test.go:53\n        \tError:      \tNot equal: \n        \t            \texpected: -2\n        \t  "}
{"description": "CalculateL uses wrong term (B and M swapped)", "bug_class": "other", "mutation_file": "m67-calcL-term-swap.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "CalculateL(B,M,p)", "original_outcome": "correct term", "mutated_outcome": "swapped term"}, "fingerprint": "30c967811eb2d9896cf1882986262410629d7d429b135a9af16d7f7514cb911b", "tested_on": "2025-09-01T21:13:43.695474", "caught_by_test": true, "test_output": "?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestCalculateL (0.00s)\n    tuning_test.go:12: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/config/tuning_test.go:12\n        \tError:      \tNot equal: \n        \t            \texpected: 213340\n        \t            \tactual  : 4\n        \tTest:       \tTestCalculateL\nFAIL\nFAIL\tgithub.com/satmihir/fair/pkg/config\t0.287s\nok  \tgithub.com/satmihir/fair/pkg/dat"}
{"description": "Constructor bypasses validation path (returns nil,nil)", "bug_class": "error_semantics", "mutation_file": "m68-skip-validation.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "NewStructureWithClock(bad config)", "original_outcome": "error", "mutated_outcome": "nil,nil"}, "fingerprint": "908d3a9b0a767ac26f1a42571728232ca04942e8738675c1e8bee253e03863fa", "tested_on": "2025-09-01T21:13:43.881864", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Ticker Stop becomes no-op (leaks goroutine)", "bug_class": "other", "mutation_file": "m69-ticker-stop-noop.diff", "file": "pkg/utils/time_utils.go", "lines_changed": 2, "witness": {"call": "Close()", "original_outcome": "ticker stops", "mutated_outcome": "ticker keeps running"}, "fingerprint": "9d173cdf41f5018967dea57f4a62b94c51a6167b3f0ba0bbde574cf7aac7c2b6", "tested_on": "2025-09-01T21:13:44.043787", "caught_by_test": true, "test_output": "FAIL\tgithub.com/satmihir/fair/pkg/data [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/integration [build failed]\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nFAIL\tgithub.com/satmihir/fair/pkg/tracker [build failed]\nFAIL\tgithub.com/satmihir/fair/pkg/utils [build failed]\nok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nFAIL\n# github.com/satmihir/fair/pkg/utils\npkg/utils/time_utils.go:52:2: syntax error: unexpected /, expec"}
{"description": "Buckets start with small non-zero probability (0.01)", "bug_class": "other", "mutation_file": "m70-nonzero-start-prob.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "fresh Structure.RegisterRequest", "original_outcome": "p=0", "mutated_outcome": "p=0.01 base"}, "fingerprint": "4ff8a60b5700045cd54a8c7088e2ab9f9857ede88e9acde1cefc774b6bd8d39f", "tested_on": "2025-09-01T21:13:44.225701", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Use 1024 divisor for ms\u2192sec (slower decay)", "bug_class": "other", "mutation_file": "m71-decay-divisor-1024.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "adjustProbability with small delta", "original_outcome": "ms-based decay", "mutated_outcome": "slightly slower (1024)"}, "fingerprint": "e7265fe4f70a86f8e5243b966da0b4296afa2e510c5b2c139784e04bf4fc7a0e", "tested_on": "2025-09-01T21:13:44.793443", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestAdjustProbability (0.00s)\n    data_test.go:164: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/data/data_test.go:164\n        \tError:      \tNot equal: \n        \t            \texpected: 0.8999121136663948\n        \t            \tactual  : 0.89991000449985\n        \tTest:       \tTestAdjustProbability\nFAI"}
{"description": "Reverse bucket index mapping per level", "bug_class": "other", "mutation_file": "m72-reverse-bucket-index.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "visitBuckets mapping", "original_outcome": "uniform spread", "mutated_outcome": "mirrored spread"}, "fingerprint": "a6489f17202fbdbe03cfa48a01df63d8bd3c6018a6a20bd1e166b4c72d832077", "tested_on": "2025-09-01T21:13:44.980691", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Clamp p>1 to 0.999 instead of 1", "bug_class": "validation", "mutation_file": "m73-upper-clamp-0_999.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "ReportOutcome with large Pi", "original_outcome": "p=1", "mutated_outcome": "p\u22480.999"}, "fingerprint": "12599ace844a0d4759079d91e0b0017e1acabfab6491a1f2440d80fc862b26a6", "tested_on": "2025-09-01T21:13:45.163213", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Allow Pi==1 but forbid Pd==1 strictly", "bug_class": "validation", "mutation_file": "m74-validate-upper-relax.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "validateStructureConfig(Pi=1,Pd<1)", "original_outcome": "error", "mutated_outcome": "passes"}, "fingerprint": "0c16da0a6316085511d7aae7fed343f9b0005644327172632b45b24830dd5801", "tested_on": "2025-09-01T21:13:45.356812", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Reduce decay by 10% (lambda*0.9)", "bug_class": "ttl_fence", "mutation_file": "m75-decay-slow-10pct.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "adjustProbability over time", "original_outcome": "baseline decay", "mutated_outcome": "slower decay"}, "fingerprint": "92feae55a2047a156049cd1bdd91efafe6727cb55c56f8fb9e84b642ab905bf0", "tested_on": "2025-09-01T21:13:45.912650", "caught_by_test": true, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestAdjustProbability (0.00s)\n    data_test.go:164: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/data/data_test.go:164\n        \tError:      \tNot equal: \n        \t            \texpected: 0.8999190036448906\n        \t            \tactual  : 0.89991000449985\n        \tTest:       \tTestAdjustProbability\nFAI"}
{"description": "Mean adds tiny epsilon (biases higher)", "bug_class": "other", "mutation_file": "m76-mean-epsilon.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "MeanFinalProbabilityFunction", "original_outcome": "exact mean", "mutated_outcome": "mean+1e-6"}, "fingerprint": "840bdfc86f874679b6eada05855473055e5086b616615d357cfd2d39bc5be397", "tested_on": "2025-09-01T21:13:46.208780", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Min starts from 0.999 (raises minima)", "bug_class": "validation", "mutation_file": "m77-min-start-0_999.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "MinFinalProbabilityFunction([...])", "original_outcome": "min true", "mutated_outcome": "min\u22650.999"}, "fingerprint": "7acdecf31d31a9be8df7dfcbf7a20200ea16db2ff7aaedf9f42f6ce6c4a6ec49", "tested_on": "2025-09-01T21:13:46.509734", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "New ticker period doubled", "bug_class": "other", "mutation_file": "m78-ticker-double-period.diff", "file": "pkg/utils/time_utils.go", "lines_changed": 2, "witness": {"call": "NewRealTicker(d).C()", "original_outcome": "tick at d", "mutated_outcome": "tick at 2d"}, "fingerprint": "8c824213857836ede19972933516baadcef164c943889c5cab351b55e93e7e90", "tested_on": "2025-09-01T21:13:46.819775", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "FinalProbability reported rounded up to 6dp", "bug_class": "other", "mutation_file": "m79-finalprob-roundup.diff", "file": "pkg/data/data.go", "lines_changed": 2, "witness": {"call": "includeStats FinalProbability", "original_outcome": "raw", "mutated_outcome": "rounded up"}, "fingerprint": "40d4a41d77e6efb29321ed6b496d46fd46de38a95262e342d1dcf44ceb35fc9d", "tested_on": "2025-09-01T21:13:47.003073", "caught_by_test": false, "test_output": "ok  \tgithub.com/satmihir/fair/pkg/config\t(cached)\n?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\nok  \tgithub.com/satmihir/fair/pkg/data\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/integration\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/tracker\t(cached)\nok  \tgithub.com/satmihir/fair/pkg/utils\t(cached)\n"}
{"description": "Pi uses (tolerable-1) causing larger increments", "bug_class": "off_by_one", "mutation_file": "m80-pi-off-by-one.diff", "file": "pkg/config/tuning.go", "lines_changed": 2, "witness": {"call": "GenerateTunedStructureConfig", "original_outcome": "Pi=1/N", "mutated_outcome": "Pi=1/(N-1)"}, "fingerprint": "643525a22a18ab40f5ec8e189bbfbb6e6b45170b03cca61720e1e907b870fbec", "tested_on": "2025-09-01T21:13:47.554369", "caught_by_test": true, "test_output": "?   \tgithub.com/satmihir/fair/pkg/request\t[no test files]\n?   \tgithub.com/satmihir/fair/pkg/testutils\t[no test files]\n--- FAIL: TestGenerateTunedStructureConfig (0.00s)\n    tuning_test.go:19: \n        \tError Trace:\t/Users/mihirsathe/Documents/GitHub/fair/pkg/config/tuning_test.go:19\n        \tError:      \tNot equal: \n        \t            \texpected: 1.0416666666666665\n        \t            \tactual  : 1\n        \tTest:       \tTestGenerateTunedStructureConfig\n    tuning_test.go:20: \n        \tError Tra"}
